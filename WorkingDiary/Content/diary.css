.maindiv {
    margin: 10px;
    position: relative;
}

div #ycontrol {
    height: 50px;
}

div #mcontrol {
    height: 50px;
}

#yleft {
    left: 10%;
    cursor: pointer;
    transform: translate(-50%, 0%);
    z-index: 99;
}

#yright {
    right: 10%;
    cursor: pointer;
    transform: translate(-50%, 0%);
    z-index: 99;
}

#mleft {
    left: 10%;
    cursor: pointer;
    transform: translate(-50%, 0%);
    z-index: 99;
}

#mright {
    right: 10.5%;
    cursor: pointer;
    transform: translate(-50%, 0%);
    z-index: 99;
}

span {
    position: absolute;
    transition: left 0.5s, opacity 0.5s;
    transition-timing-function: ease-in-out;
    transform: translate(-50%, 0%);
}

.year {
    font-size: 30px;
    font-weight: bold;
}

.month {
    font-size: 20px;
    font-weight: bold;
}

table {
    border-collapse: collapse;
    margin: auto;
    width: 80%;
    /*transition: opacity 3s;*/
}


/*  zamerom je, aby pri prepnuti roka, resp. mesiaca bola tabulka zmenena "jemne" 
    bola vyskusana animacia, aby sa spustila na zaciatku funkcie updateDiaryTable v diary.js, ale nie je 
    dobrym riesenim naraz spustit animaciu a zmenu obsahu v tabulke
    lepsim riesenim by bolo asi:
    - pouzit transition na opacity elementu DIV, v ktorom je tabulka
    - pre tento element DIV zmenit opacity na 0
    - chytit event transitionend https://developer.mozilla.org/en-US/docs/Web/Events/transitionend
    - v eventhandleri odstranit existujucu tabulku, vytvorit novu, a opacity elementu DIV zmenit opat na 1
*/

.table_animation {
    animation-name: changing_opacity;
    animation-duration: 1s;
}

@keyframes changing_opacity {
    0% {
        opacity: 1;
    }

    50% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

table, th, td {
    border: 1px solid black;
    padding-left: 5px;
}

    /*tr:nth-child(even) {
    background-color: #f2f2f2
} 
*/

    td:first-child {
        font-size: 20px;
        font-weight: bold;
        text-align: center;
        padding-left: 0px;
    }

.dov {
    background-color: lightgreen;
}

.sluz {
    background-color: lightblue;
}

.pn {
    background-color: lightyellow;
}

.nepl {
    background-color: tomato;
}

.oddrow {
    background-color: #f2f2f2;
}

.newrowicon {
    position: absolute;
    width: 32px;
    height: 29px;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    cursor: pointer;
}

.left_td_div {
    float: left;
    width: 55%;
    height: 100%;
}

.right_td_div {
    float: right;
    width: 45%;
    height: 100%;
    position: relative;
}

.control_div {
    height: 30px;
}

img {
    margin-right: 8px;
    cursor: pointer;
    width: 24px;
    height: 24px;
    margin-top: 4px;
}

/*Dropdown:*/

.dropbtn {
    border: 1px solid black;
    border-radius: 4px 3px;
    background-color: white;
    /*color: white; */
    padding: 3px;
    font-size: 12px;
    /*border: none; */
    cursor: pointer;
    width: 100%;
}

/* The container <div> - needed to position the dropdown content */
.dropdown {
    position: relative;
    display: inline-block;
    width: 100%;
    margin-top: 4px;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;

}

    /* Links inside the dropdown */
.dropdown-content div {
    color: black;
    padding: 3px;
    text-decoration: none;
    display: block;
    font-size: 12px;
}

        /* Change color of dropdown links on hover */
.dropdown-content div:hover {
    background-color: #f1f1f1
}

/* Show the dropdown menu on hover */
.dropdown:hover .dropdown-content {
    display: block;
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.dropdown:hover .dropbtn {
    background-color: #f1f1f1;
}

input[type=text] {
    border: 1px solid black;
    border-radius: 4px 3px;
    font-size: 12px;
    padding-top: 4px;
    padding-bottom: 5px;
    margin-top: 4px;
} 
